%% This code takes connectivity data from brainstorm and convert it into 4D array which is 
% then converted into NxN matrix of specific frequency range
% It then saves results of DMN and full NxN matrix
%%%%%%%MAC%%%%%%

clc 
clear all
close all



LoadingPath = '/Users/nzcc-ghani/Documents/MATLAB/SensorConnectivity/DATA-Sensor-GZ';

%% LoadingPath has three folders namely easy medium and Hard

fs = 2048;

for i = 1:26
 %% Setting up paths and PLV data saved from brainstorm  
        EasyPath =[LoadingPath '/Participant ' num2str(i) '/Easy']; 
        MediumPath =[LoadingPath '/Participant ' num2str(i) '/Medium']; 
        HardPath =[LoadingPath '/Participant ' num2str(i) '/Hard']; 

% Define the path and half of the file name
half_file_name = '/timefreq_connectn_plv';  %These files are generated by brainstorm

% Search for the file using the dir function
Easydir = dir([EasyPath, half_file_name, '*.mat']);
Mediumdir = dir([MediumPath, half_file_name, '*.mat']);
Harddir = dir([HardPath, half_file_name, '*.mat']);


% Check if any files were found
% if isempty(EasyPath & MediumPath & HardPath)
%     disp('No matching .mat files found.');
% else
    % Load the first matching file (assuming there's only one)
    file1= fullfile(Easydir(1).folder, Easydir(1).name);
    fileEasy = load(file1);
        file2= fullfile(Mediumdir(1).folder, Mediumdir(1).name);
        fileMed = load(file2);
            file3= fullfile(Harddir(1).folder, Harddir(1).name);
            fileHard = load(file3);
%% Reshape connectivity data in 4D and Converting data in NxN for specific band (alpha)
    EasyFile = bst_memory('GetConnectMatrix', fileEasy);
        MediumFile = bst_memory('GetConnectMatrix', fileMed);
            HardFile = bst_memory('GetConnectMatrix', fileHard);

            [Na1, Nb1, Ntime1, Nfreq1] = size(EasyFile);
            [Na2, Nb2, Ntime2, Nfreq2] = size(MediumFile);
            [Na3, Nb3, Ntime3, Nfreq3] = size(HardFile);

            EasyConnectivityMatrix = squeeze(EasyFile(:, :, 1, 3));  %3 for alpha range
            MediumConnectivityMatrix = squeeze(MediumFile(:, :, 1, 3));
            HardConnectivityMatrix = squeeze(HardFile(:, :, 1, 3));


%% Thresholding for DMN and %% Saving DMN and Full Connectivity matrices (PLV)


DMNc=[1 3 4 5 6 7 8 14 15 16 22 23 24 25 26 28 30]; % [FP1 FP2 F3 F4 FZ F7 F8 C3 C4 CZ P3 P4 PZ P7 P8 O1 O2]

%Easy Data
DMN = EasyConnectivityMatrix(DMNc, DMNc);
         save(fullfile(EasyPath,'DMN.mat'),'DMN', 'fs')
                  save(fullfile(EasyPath,'EasyFullConn.mat'),'EasyConnectivityMatrix', 'fs')

                  channelNames = fileEasy.RefRowNames(DMNc);
% DMNPre = DMN;
% figure;
% imagesc(DMN);
% colormap('jet');  % You can choose any colormap you prefer
% colorbar;
% axis square;
% 
% % Set x and y axis labels with channel names
% xticks(1:17);
% xticklabels(channelNames);
% xtickangle(45);  % Rotate x-axis labels for better readability
% yticks(1:17);
% yticklabels(channelNames);
% 
% xlabel('Node B');
% ylabel('Node A');
% title('Mean Connectivity Matrix Pre');

%MediumData
DMN = MediumConnectivityMatrix(DMNc, DMNc);
save(fullfile(MediumPath,'DMN.mat'),'DMN', 'fs')
                  save(fullfile(MediumPath,'MediumFullConn.mat'),'MediumConnectivityMatrix', 'fs')

DMNPost = DMN;


% figure;
% imagesc(DMN);
% colormap('jet');  % You can choose any colormap you prefer
% colorbar;
% axis square;
% 
% % Set x and y axis labels with channel names
% xticks(1:17);
% xticklabels(channelNames);
% xtickangle(45);  % Rotate x-axis labels for better readability
% yticks(1:17);
% yticklabels(channelNames);
% 
% xlabel('Node B');
% ylabel('Node A');
% title('Mean Connectivity Post');

%HardData
DMN = HardConnectivityMatrix(DMNc, DMNc);
 save(fullfile(HardPath,'DMN.mat'),'DMN', 'fs')
                  save(fullfile(HardPath,'HardFullConn.mat'),'HardConnectivityMatrix', 'fs')   

                  DMNPost_3M = DMN;

% figure;
% imagesc(DMN);
% colormap('jet');  % You can choose any colormap you prefer
% colorbar;
% axis square;
% 
% % Set x and y axis labels with channel names
% xticks(1:17);
% xticklabels(channelNames);
% xtickangle(45);  % Rotate x-axis labels for better readability
% yticks(1:17);
% yticklabels(channelNames);
% 
% xlabel('Node B');
% ylabel('Node A');
% title('Mean Connectivity Matrix Post-3M');
end 

    
    
   
 
 